@using Microsoft.AspNetCore.Components.Authorization;
@using WebApp.Shared;
@page "/projects/delete/{id:guid}"

@inject HttpClient Http;
@inject NavigationManager Navigation;

<h3> Delete Project (@projectItem.ProjectName)</h3>


@if (projectItem == null)
{
    <span> Getting the project item to delete</span>
}
else
{
    <EditForm Model="@projectItem" OnValidSubmit="@SubmitDelete">

        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="custom-control-label"> Name</label>
            <input class="form-control" type="text" value="@projectItem.ProjectName" aria-label="Disabled input example" disabled readonly>
            <input class="form-control" type="text" value="@projectItem.ProjectDescription" aria-label="Disabled input example" disabled readonly>
        </div>

        <button type="submit" class="btn btn-primary">

            <i class="fas fa-save"></i>Delete
        </button>
        <ValidationSummary />
    </EditForm>
}

@if (canDelete == false)
{
    <div class="alert alert-danger" role="alert">
       You cannot delete this project. There are tickets associated to this project.
    </div>
}

@code {


    [Parameter] public Guid Id { get; set; }

    private Project projectItem { get; set; } = new Project();
    private bool canDelete = true;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            projectItem = await Http.GetFromJsonAsync<Project>($"Projects/{Id}");
        }
        catch (Exception e)
        {

        }

    }

    private async Task SubmitDelete()

    {
        try
        {
            var response = await Http.DeleteAsync($"Projects/{projectItem.ProjectId}");
            response.EnsureSuccessStatusCode();
            Navigation.NavigateTo("/projects");
        }
        catch (Exception e)
        {
            canDelete = false;
        }
    }

}