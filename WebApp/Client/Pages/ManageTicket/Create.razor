@using Microsoft.AspNetCore.Components.Authorization;
@using WebApp.Shared;
@using Newtonsoft.Json;

@page "/tickets/create"

@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthenticationStateProvider ASP

<h3> Project create </h3>

<EditForm Model="ticketItem" OnValidSubmit="CreateNewTicket">

    <DataAnnotationsValidator />

    <div class="form-group">
        <label class="custom-control-label"> Name </label>
        <InputText id="title" @bind-Value="ticketItem.Title" class="form-control" />
        <label class="custom-control-label"> Assign user </label>
        <InputText id="title" @bind-Value="ticketItem.AssignedUser.UserName" class="form-control" />

        <label class="mr-sm-2" for="inlineFormCustomSelect">Ticket type</label>
        <InputSelect @bind-Value="ticketItem.ticketType" class="custom-select mr-sm-2" id="inlineFormCustomSelect">
            <option value="0">Todo Ticket</option>
            <option value="1">Bug Ticket</option>
            <option value="2">Support Ticket</option>
        </InputSelect>

        <ValidationMessage For="@(() => ticketItem.Title)" />
    </div>

    <button type="submit" class="btn btn-primary">

        <i class="fas fa-save"></i>Create
    </button>
    <ValidationSummary />
</EditForm>



@code {

    private Ticket ticketItem { get; set; } = new Ticket();

    protected override async Task OnInitializedAsync()
    {
        ticketItem.AssignedUser = new ApplicationUser();
        ticketItem.AssignedUser.UserName = "Type username here";
    }

    private async void CreateNewTicket()
    {
        var user = (await ASP.GetAuthenticationStateAsync()).User;
        var UserStringId = user.FindFirst(c => c.Type == "sub")?.Value;

        try
        {
            var response = await Http.PostAsJsonAsync($"Tickets/{UserStringId}", ticketItem);
            var content = await response.Content.ReadAsStringAsync();
            var ticket = JsonConvert.DeserializeObject<Ticket>(content);

            if (response.IsSuccessStatusCode)
                Navigation.NavigateTo($"/tickets");

            else if (!response.IsSuccessStatusCode)
                ticketItem.AssignedUser.UserName = "Failed to find user, try again";

        }
        catch (Exception e)
        {

        }
    }
}