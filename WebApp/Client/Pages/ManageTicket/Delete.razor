@using Microsoft.AspNetCore.Components.Authorization;
@using WebApp.Shared;
@using Microsoft.AspNetCore.Authorization;

@page "/tickets/delete/{id:guid}"

@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager Navigation

<h3> Delete Ticket (@ticketItem.Title)</h3>


@if (ticketItem == null)
{
    <span> Getting the project item to delete</span>
}
else
{
    <EditForm Model="@ticketItem" OnValidSubmit="@SubmitDelete">

        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="custom-control-label"> Name</label>
            <input class="form-control" type="text" value="@ticketItem.Title" aria-label="Disabled input example" disabled readonly>
        </div>

        <button type="submit" class="btn btn-primary">

            <i class="fas fa-save"></i>Delete
        </button>
        <ValidationSummary />
    </EditForm>
}


@code {


    [Parameter] public Guid Id { get; set; }

    private Ticket ticketItem { get; set; } = new Ticket();

    protected override async Task OnInitializedAsync()
    {

        try
        {
            ticketItem = await Http.GetFromJsonAsync<Ticket>($"Tickets/{Id}");
        }
        catch (Exception e)
        {

        }

    }

    private async void SubmitDelete()

    {
        try
        {
            var response = await Http.DeleteAsync($"Tickets/{ticketItem.Id}");
            response.EnsureSuccessStatusCode();
            Navigation.NavigateTo("/tickets");
        }
        catch (Exception e)
        {

        }
    }

}