@page "/"


@attribute [Authorize]
@inject HttpClient http;
@using WebApp.Shared;
@using Microsoft.AspNetCore.Authorization;
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Security.Claims;
@using Newtonsoft.Json;
@inject AuthenticationStateProvider ASP

<AuthorizeView>
    <Authorized>
        <h1>@context.User.Identity.Name's Dashboard</h1>
        @*Tickets*@
    <div class="d-inline-flex p-3" style="margin-top: 2em;">

        <div class="b-example-divider"></div>

        <div class="d-inline-flex flex-column align-items-stretch flex-shrink-0 bg-white align-items-center" style="width: 380px;">
            <a href="/" class="d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="24" fill="currentColor" class="bi bi-alarm-fill" viewBox="0 0 30 24">
                    <path d="M6 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H9v1.07a7.001 7.001 0 0 1 3.274 12.474l.601.602a.5.5 0 0 1-.707.708l-.746-.746A6.97 6.97 0 0 1 8 16a6.97 6.97 0 0 1-3.422-.892l-.746.746a.5.5 0 0 1-.707-.708l.602-.602A7.001 7.001 0 0 1 7 2.07V1h-.5A.5.5 0 0 1 6 .5zm2.5 5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5zM.86 5.387A2.5 2.5 0 1 1 4.387 1.86 8.035 8.035 0 0 0 .86 5.387zM11.613 1.86a2.5 2.5 0 1 1 3.527 3.527 8.035 8.035 0 0 0-3.527-3.527z" />
                </svg>
                <span class="fs-5 fw-semibold">Tickets</span>
            </a>
            @if (UserTicks != null)
            {
                @foreach (var ticket in UserTicks)
                {

                    <div class="list-group list-group-flush border-bottom scrollarea">
                        <a href="/tickets" class="list-group-item list-group-item-action py-3 lh-tight">
                            <div class="d-flex w-100 align-items-center justify-content-between">
                                <strong class="mb-1">@ticket.Title</strong>
                                <small class="text-muted">@ticket.ticketType</small>
                            </div>
                        </a>
                    </div>
                }
            }
        </div>

        <div class="b-example-divider"></div>
        @*Projects*@
        <div class="d-inline-flex flex-column align-items-stretch flex-shrink-0 bg-white align-items-center" style="width: 380px;">
            <a href="/" class="d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="24" fill="currentColor" class="bi bi-alarm-fill" viewBox="0 0 30 24">
                    <path d="M6 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H9v1.07a7.001 7.001 0 0 1 3.274 12.474l.601.602a.5.5 0 0 1-.707.708l-.746-.746A6.97 6.97 0 0 1 8 16a6.97 6.97 0 0 1-3.422-.892l-.746.746a.5.5 0 0 1-.707-.708l.602-.602A7.001 7.001 0 0 1 7 2.07V1h-.5A.5.5 0 0 1 6 .5zm2.5 5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5zM.86 5.387A2.5 2.5 0 1 1 4.387 1.86 8.035 8.035 0 0 0 .86 5.387zM11.613 1.86a2.5 2.5 0 1 1 3.527 3.527 8.035 8.035 0 0 0-3.527-3.527z" />
                </svg>
                <span class="fs-5 fw-semibold">Projects</span>
            </a>
            @if(Projects != null) { 
                @foreach (var project in Projects)
                {

                    <div class="list-group list-group-flush border-bottom scrollarea">
                        <a href="/projects" class="list-group-item list-group-item-action py-3 lh-tight">
                            <div class="d-flex w-100 align-items-center justify-content-between">
                                <strong class="mb-1">@project.ProjectName</strong>
                                <small class="text-muted">@project.assignedCompanyForProject.CompanyName</small>
                            </div>
                            <div class="col-10 mb-1 small">@project.ProjectDescription</div>
                        </a>
                    </div>
                }
            }
        </div>

        <div class="b-example-divider"></div>
    </div>


    </Authorized>
    <NotAuthorized>
        <p> You must be logged in.</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    private List<Ticket> UserTicks { get; set; } = new List<Ticket>();
    private List<Project> Projects { get; set; } = new List<Project>();

    protected override async Task OnInitializedAsync()
    {

        var user = (await ASP.GetAuthenticationStateAsync()).User;

        var UserStringId = user.FindFirst(c => c.Type == "sub")?.Value;

        if(UserStringId != "" || UserStringId != null)
            UserTicks = await http.GetFromJsonAsync<List<Ticket>>($"User/{UserStringId}/UsersTickets");

            // Get all projects
            try
            {
                Projects = await http.GetFromJsonAsync<List<Project>>($"Projects/{UserStringId}/UserProjects");

                foreach (var x in Projects)
                {
                    x.assignedCompanyForProject =
                        await http.GetFromJsonAsync<Company>($"Projects/{x.ProjectId}/CompanyProject");
                }

            }
            catch (Exception e)
            {

            }


    }
}