@page "/"


@attribute [Authorize]
@inject HttpClient http;
@using WebApp.Shared;
@using Microsoft.AspNetCore.Authorization;
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Security.Claims;
@using Newtonsoft.Json;
@inject AuthenticationStateProvider ASP

<AuthorizeView>
    <Authorized>
        <h1>@context.User.Identity.Name's Dashboard</h1>
        @*Tickets*@
    <div class="d-inline-flex p-3" style="margin-top: 2em;">

        <div class="b-example-divider"></div>

        <div class="d-inline-flex flex-column align-items-stretch flex-shrink-0 bg-white align-items-center" id="tickets-display" style="width: 380px; margin-right: 2%;">
            <a href="/" class="d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-ticket" viewBox="0 0 30 15">
                    <path d="M0 4.5A1.5 1.5 0 0 1 1.5 3h13A1.5 1.5 0 0 1 16 4.5V6a.5.5 0 0 1-.5.5 1.5 1.5 0 0 0 0 3 .5.5 0 0 1 .5.5v1.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 11.5V10a.5.5 0 0 1 .5-.5 1.5 1.5 0 1 0 0-3A.5.5 0 0 1 0 6V4.5ZM1.5 4a.5.5 0 0 0-.5.5v1.05a2.5 2.5 0 0 1 0 4.9v1.05a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-1.05a2.5 2.5 0 0 1 0-4.9V4.5a.5.5 0 0 0-.5-.5h-13Z" />
                </svg>
                <span class="fs-5 fw-semibold">Tickets</span>
            </a>
            @if (UserTicks != null)
            {
                @foreach (var ticket in UserTicks)
                {
                    if(ticket.isDone == false) { 
                        <div class="list-group list-group-flush border-bottom scrollarea">
                            <a href="/tickets" class="list-group-item list-group-item-action py-3 lh-tight">
                                <div class="d-flex w-100 align-items-center justify-content-between">
                                    <strong class="mb-1">@ticket.Title</strong>
                                    <small class="text-muted">@ticket.ticketType</small>
                                    @if(ticket.AssociatedProject != null) { 
                                <small class="text-muted">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="17" fill="currentColor" class="bi bi-journals" viewBox="0 0 30 17">
                                        <path d="M5 0h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2 2 2 0 0 1-2 2H3a2 2 0 0 1-2-2h1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1H1a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v9a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1H3a2 2 0 0 1 2-2z" />
                                        <path d="M1 6v-.5a.5.5 0 0 1 1 0V6h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V9h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 2.5v.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1H2v-.5a.5.5 0 0 0-1 0z" />
                                    </svg>@ticket.AssociatedProject.ProjectName
                                </small>
                                    }
                                </div>
                            </a>
                        </div>
                    }
                }
            }
        </div>

        <div class="b-example-divider"></div>

        @*Projects*@
        <div class="d-inline-flex flex-column align-items-stretch flex-shrink-0 bg-white align-items-center" id="projects-display" style="width: 380px;">
            
            <a href="/" class="d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="24" fill="currentColor" class="bi bi-journals" viewBox="0 0 30 15">
                    <path d="M5 0h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2 2 2 0 0 1-2 2H3a2 2 0 0 1-2-2h1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1H1a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v9a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1H3a2 2 0 0 1 2-2z" />
                    <path d="M1 6v-.5a.5.5 0 0 1 1 0V6h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V9h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 2.5v.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1H2v-.5a.5.5 0 0 0-1 0z" />
                </svg>
                <span class="fs-5 fw-semibold">Projects</span>
            </a>
            @if(Projects != null) { 
                @foreach (var project in Projects)
                {
                    if(project.isComplete == false) { 
                        <div class="list-group list-group-flush border-bottom scrollarea">
                            <a href="/projects" class="list-group-item list-group-item-action py-3 lh-tight">
                                <div class="d-flex w-100 align-items-center justify-content-between">
                                    <strong class="mb-1">@project.ProjectName</strong>
                                    <small class="text-muted">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="17" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 30 17">
                                            <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                                            <path fill-rule="evenodd" d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z" />
                                            <path d="M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z" />
                                        </svg>@project.assignedCompanyForProject.CompanyName
                                    </small>
                                </div>
                                <div class="col-10 mb-1 small">@project.ProjectDescription</div>
                            </a>
                        </div>
                    }
                }
            }
        </div>

        <div class="b-example-divider"></div>
    </div>


    </Authorized>
    <NotAuthorized>
        <p> You must be logged in.</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    private List<Ticket> UserTicks { get; set; } = new List<Ticket>();
    private List<Project> Projects { get; set; } = new List<Project>();

    protected override async Task OnInitializedAsync()
    {

        var user = (await ASP.GetAuthenticationStateAsync()).User;

        var UserStringId = user.FindFirst(c => c.Type == "sub")?.Value;

        if(UserStringId != "" || UserStringId != null)
            UserTicks = await http.GetFromJsonAsync<List<Ticket>>($"Tickets/{UserStringId}/UserTickets");

            // Get all projects
            try
            {
                Projects = await http.GetFromJsonAsync<List<Project>>($"Projects/{UserStringId}/UserProjects");

                foreach (var x in Projects)
                {
                    x.assignedCompanyForProject =
                        await http.GetFromJsonAsync<Company>($"Projects/{x.ProjectId}/CompanyProject");
                }

            }
            catch (Exception e)
            {

            }


    }
}