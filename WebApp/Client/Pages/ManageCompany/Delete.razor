@using Microsoft.AspNetCore.Components.Authorization;
@using WebApp.Shared;
@using Microsoft.AspNetCore.Authorization;

@page "/company/delete/{id:guid}"

@inject HttpClient Http;
@inject NavigationManager Navigation;

<h3> Delete Project (@companyItem.CompanyName)</h3>

@attribute [Authorize(Roles = "Admin")]


@if (companyItem == null)
{
    <span> Getting the project item to delete</span>
}
else
{
    <EditForm Model="@companyItem" OnValidSubmit="@SubmitDelete">

        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="custom-control-label"> Name</label>
            <input class="form-control" type="text" value="@companyItem.CompanyName" aria-label="Disabled input example" disabled readonly>
        </div>

        <button type="submit" class="btn btn-primary">

            <i class="fas fa-save"></i>Delete
        </button>
        <ValidationSummary />
    </EditForm>
}

@if (canDelete == false)
{
    <div class="alert alert-danger" role="alert">
        You cannot delete this company. There are projects associated to this company!
    </div>
}

@code {


    [Parameter] public Guid Id { get; set; }

    private Company companyItem { get; set; } = new Company();
    private bool canDelete = true;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            companyItem = await Http.GetFromJsonAsync<Company>($"Companies/{Id}");
        }
        catch (Exception e)
        {

        }

    }

    private async Task SubmitDelete()

    {
        try
        {
            var response = await Http.DeleteAsync($"Companies/{companyItem.CompanyId}");
            response.EnsureSuccessStatusCode();
            Navigation.NavigateTo("/company");
        }
        catch (Exception e)
        {
            canDelete = false;
        }
    }

}